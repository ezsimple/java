buildscript {
	ext {
		springBootVersion = '1.4.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'

war {
	baseName = 'grid'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations {
	providedRuntime
}

dependencies {

	compile('org.springframework.boot:spring-boot-starter-jdbc:1.3.5.RELEASE')

	// ----------------------------------------------------------------------------------
	// MyBatis Query를 출력하기
	// log4jdbc.log4j2.properties & logback.xml 설정에 유의한다.
	// ----------------------------------------------------------------------------------
	compile('org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16')
	runtime('mysql:mysql-connector-java')

	// ----------------------------------------------------------------------------------
	// mybatis-typehandlers-jsr310 아티팩트는 
	// 데이터베이스 컬럼의 날짜/시간 타입을 Java 8부터 추가된 
	// LocalDate, LocalTime, LocalDateTime, Year, Month 클래스로의 자동 맵핑을 지원한다. 
	// MyBatis 3.4 버전부터 자동 지원되며 이전 버전은 별도의 typeHandler 등록이 필요하다.
	// ----------------------------------------------------------------------------------
	compile('org.mybatis:mybatis-typehandlers-jsr310:1.0.1')

	compile('org.springframework.boot:spring-boot-starter-aop')
	compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.1.1')
	
	// -----------------------------------------------------------------------------------
	// When using @ConfigurationProperties it is recommended to add 
	// 'spring-boot-configuration-processor' to your classpath 
	// to generate configuration metadata
	// -----------------------------------------------------------------------------------
	compile('org.springframework.boot:spring-boot-configuration-processor')

	// compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-social-facebook')
	compile('org.springframework.boot:spring-boot-starter-social-twitter')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-websocket')
	compileOnly('org.projectlombok:lombok')

	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}
