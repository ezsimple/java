//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.2-hudson-jaxb-ri-2.2-63- 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.10.29 at 05:05:13 \uc624\ud6c4 KST 
//


package net.ion.open.oadr2.model;

import java.io.Serializable;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for IntervalType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="IntervalType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{urn:ietf:params:xml:ns:icalendar-2.0}duration"/>
 *         &lt;element ref="{urn:ietf:params:xml:ns:icalendar-2.0}uid"/>
 *         &lt;element ref="{urn:ietf:params:xml:ns:icalendar-2.0:stream}streamPayloadBase"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "IntervalType", propOrder = {
    "duration",
    "uid",
    "streamPayloadBase"
})
public class Interval implements Serializable, Equals, HashCode, ToString
{

    private final static long serialVersionUID = 1L;
    @XmlElement(namespace = "urn:ietf:params:xml:ns:icalendar-2.0", required = true)
    protected DurationPropType duration;
    @XmlElement(namespace = "urn:ietf:params:xml:ns:icalendar-2.0", required = true)
    protected Uid uid;
    @XmlElementRef(name = "streamPayloadBase", namespace = "urn:ietf:params:xml:ns:icalendar-2.0:stream", type = JAXBElement.class)
    protected JAXBElement<? extends StreamPayloadBase> streamPayloadBase;

    /**
     * Default no-arg constructor
     * 
     */
    public Interval() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public Interval(final DurationPropType duration, final Uid uid, final JAXBElement<? extends StreamPayloadBase> streamPayloadBase) {
        this.duration = duration;
        this.uid = uid;
        this.streamPayloadBase = streamPayloadBase;
    }

    /**
     * Gets the value of the duration property.
     * 
     * @return
     *     possible object is
     *     {@link DurationPropType }
     *     
     */
    public DurationPropType getDuration() {
        return duration;
    }

    /**
     * Sets the value of the duration property.
     * 
     * @param value
     *     allowed object is
     *     {@link DurationPropType }
     *     
     */
    public void setDuration(DurationPropType value) {
        this.duration = value;
    }

    /**
     * Gets the value of the uid property.
     * 
     * @return
     *     possible object is
     *     {@link Uid }
     *     
     */
    public Uid getUid() {
        return uid;
    }

    /**
     * Sets the value of the uid property.
     * 
     * @param value
     *     allowed object is
     *     {@link Uid }
     *     
     */
    public void setUid(Uid value) {
        this.uid = value;
    }

    /**
     * Gets the value of the streamPayloadBase property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link StreamPayloadBase }{@code >}
     *     {@link JAXBElement }{@code <}{@link SignalPayload }{@code >}
     *     
     */
    public JAXBElement<? extends StreamPayloadBase> getStreamPayloadBase() {
        return streamPayloadBase;
    }

    /**
     * Sets the value of the streamPayloadBase property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link StreamPayloadBase }{@code >}
     *     {@link JAXBElement }{@code <}{@link SignalPayload }{@code >}
     *     
     */
    public void setStreamPayloadBase(JAXBElement<? extends StreamPayloadBase> value) {
        this.streamPayloadBase = ((JAXBElement<? extends StreamPayloadBase> ) value);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            DurationPropType theDuration;
            theDuration = this.getDuration();
            strategy.appendField(locator, this, "duration", buffer, theDuration);
        }
        {
            Uid theUid;
            theUid = this.getUid();
            strategy.appendField(locator, this, "uid", buffer, theUid);
        }
        {
            JAXBElement<? extends StreamPayloadBase> theStreamPayloadBase;
            theStreamPayloadBase = this.getStreamPayloadBase();
            strategy.appendField(locator, this, "streamPayloadBase", buffer, theStreamPayloadBase);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Interval)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Interval that = ((Interval) object);
        {
            DurationPropType lhsDuration;
            lhsDuration = this.getDuration();
            DurationPropType rhsDuration;
            rhsDuration = that.getDuration();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "duration", lhsDuration), LocatorUtils.property(thatLocator, "duration", rhsDuration), lhsDuration, rhsDuration)) {
                return false;
            }
        }
        {
            Uid lhsUid;
            lhsUid = this.getUid();
            Uid rhsUid;
            rhsUid = that.getUid();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "uid", lhsUid), LocatorUtils.property(thatLocator, "uid", rhsUid), lhsUid, rhsUid)) {
                return false;
            }
        }
        {
            JAXBElement<? extends StreamPayloadBase> lhsStreamPayloadBase;
            lhsStreamPayloadBase = this.getStreamPayloadBase();
            JAXBElement<? extends StreamPayloadBase> rhsStreamPayloadBase;
            rhsStreamPayloadBase = that.getStreamPayloadBase();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "streamPayloadBase", lhsStreamPayloadBase), LocatorUtils.property(thatLocator, "streamPayloadBase", rhsStreamPayloadBase), lhsStreamPayloadBase, rhsStreamPayloadBase)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            DurationPropType theDuration;
            theDuration = this.getDuration();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "duration", theDuration), currentHashCode, theDuration);
        }
        {
            Uid theUid;
            theUid = this.getUid();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "uid", theUid), currentHashCode, theUid);
        }
        {
            JAXBElement<? extends StreamPayloadBase> theStreamPayloadBase;
            theStreamPayloadBase = this.getStreamPayloadBase();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "streamPayloadBase", theStreamPayloadBase), currentHashCode, theStreamPayloadBase);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public Interval withDuration(DurationPropType value) {
        setDuration(value);
        return this;
    }

    public Interval withUid(Uid value) {
        setUid(value);
        return this;
    }

    public Interval withStreamPayloadBase(JAXBElement<? extends StreamPayloadBase> value) {
        setStreamPayloadBase(value);
        return this;
    }

}
