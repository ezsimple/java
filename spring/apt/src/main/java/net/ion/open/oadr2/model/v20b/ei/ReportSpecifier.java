//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.2-hudson-jaxb-ri-2.2-63- 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.10.29 at 05:09:52 \uc624\ud6c4 KST 
//


package net.ion.open.oadr2.model.v20b.ei;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;

import net.ion.open.oadr2.model.v20b.xcal.DurationPropType;
import net.ion.open.oadr2.model.v20b.xcal.Interval;

import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * Parameters that define the content of a Report Stream
 * 
 * <p>Java class for ReportSpecifierType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ReportSpecifierType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{http://docs.oasis-open.org/ns/energyinterop/201110}reportSpecifierID"/>
 *         &lt;element ref="{urn:ietf:params:xml:ns:icalendar-2.0}granularity"/>
 *         &lt;element name="reportBackDuration" type="{urn:ietf:params:xml:ns:icalendar-2.0}DurationPropType"/>
 *         &lt;element name="reportInterval" type="{urn:ietf:params:xml:ns:icalendar-2.0}WsCalendarIntervalType" minOccurs="0"/>
 *         &lt;element ref="{http://docs.oasis-open.org/ns/energyinterop/201110}specifierPayload" maxOccurs="unbounded"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ReportSpecifierType", propOrder = {
    "reportSpecifierID",
    "granularity",
    "reportBackDuration",
    "reportInterval",
    "specifierPayloads"
})
@XmlRootElement(name = "reportSpecifier")
public class ReportSpecifier implements Serializable, Equals, HashCode, ToString
{

    private final static long serialVersionUID = 1L;
    @XmlElement(required = true)
    protected String reportSpecifierID;
    @XmlElement(namespace = "urn:ietf:params:xml:ns:icalendar-2.0", required = true)
    protected DurationPropType granularity;
    @XmlElement(required = true)
    protected DurationPropType reportBackDuration;
    protected Interval reportInterval;
    @XmlElement(name = "specifierPayload", required = true)
    protected List<SpecifierPayload> specifierPayloads;

    /**
     * Default no-arg constructor
     * 
     */
    public ReportSpecifier() {
        super();
    }

    /**
     * Fully-initialising value constructor
     * 
     */
    public ReportSpecifier(final String reportSpecifierID, final DurationPropType granularity, final DurationPropType reportBackDuration, final Interval reportInterval, final List<SpecifierPayload> specifierPayloads) {
        this.reportSpecifierID = reportSpecifierID;
        this.granularity = granularity;
        this.reportBackDuration = reportBackDuration;
        this.reportInterval = reportInterval;
        this.specifierPayloads = specifierPayloads;
    }

    /**
     * Gets the value of the reportSpecifierID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getReportSpecifierID() {
        return reportSpecifierID;
    }

    /**
     * Sets the value of the reportSpecifierID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setReportSpecifierID(String value) {
        this.reportSpecifierID = value;
    }

    /**
     * How frequently the [measurement] is to be recorded.
     * 
     * @return
     *     possible object is
     *     {@link DurationPropType }
     *     
     */
    public DurationPropType getGranularity() {
        return granularity;
    }

    /**
     * Sets the value of the granularity property.
     * 
     * @param value
     *     allowed object is
     *     {@link DurationPropType }
     *     
     */
    public void setGranularity(DurationPropType value) {
        this.granularity = value;
    }

    /**
     * Gets the value of the reportBackDuration property.
     * 
     * @return
     *     possible object is
     *     {@link DurationPropType }
     *     
     */
    public DurationPropType getReportBackDuration() {
        return reportBackDuration;
    }

    /**
     * Sets the value of the reportBackDuration property.
     * 
     * @param value
     *     allowed object is
     *     {@link DurationPropType }
     *     
     */
    public void setReportBackDuration(DurationPropType value) {
        this.reportBackDuration = value;
    }

    /**
     * Gets the value of the reportInterval property.
     * 
     * @return
     *     possible object is
     *     {@link Interval }
     *     
     */
    public Interval getReportInterval() {
        return reportInterval;
    }

    /**
     * Sets the value of the reportInterval property.
     * 
     * @param value
     *     allowed object is
     *     {@link Interval }
     *     
     */
    public void setReportInterval(Interval value) {
        this.reportInterval = value;
    }

    /**
     * Gets the value of the specifierPayloads property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the specifierPayloads property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSpecifierPayloads().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SpecifierPayload }
     * 
     * 
     */
    public List<SpecifierPayload> getSpecifierPayloads() {
        if (specifierPayloads == null) {
            specifierPayloads = new ArrayList<SpecifierPayload>();
        }
        return this.specifierPayloads;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            String theReportSpecifierID;
            theReportSpecifierID = this.getReportSpecifierID();
            strategy.appendField(locator, this, "reportSpecifierID", buffer, theReportSpecifierID);
        }
        {
            DurationPropType theGranularity;
            theGranularity = this.getGranularity();
            strategy.appendField(locator, this, "granularity", buffer, theGranularity);
        }
        {
            DurationPropType theReportBackDuration;
            theReportBackDuration = this.getReportBackDuration();
            strategy.appendField(locator, this, "reportBackDuration", buffer, theReportBackDuration);
        }
        {
            Interval theReportInterval;
            theReportInterval = this.getReportInterval();
            strategy.appendField(locator, this, "reportInterval", buffer, theReportInterval);
        }
        {
            List<SpecifierPayload> theSpecifierPayloads;
            theSpecifierPayloads = (((this.specifierPayloads!= null)&&(!this.specifierPayloads.isEmpty()))?this.getSpecifierPayloads():null);
            strategy.appendField(locator, this, "specifierPayloads", buffer, theSpecifierPayloads);
        }
        return buffer;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ReportSpecifier)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ReportSpecifier that = ((ReportSpecifier) object);
        {
            String lhsReportSpecifierID;
            lhsReportSpecifierID = this.getReportSpecifierID();
            String rhsReportSpecifierID;
            rhsReportSpecifierID = that.getReportSpecifierID();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reportSpecifierID", lhsReportSpecifierID), LocatorUtils.property(thatLocator, "reportSpecifierID", rhsReportSpecifierID), lhsReportSpecifierID, rhsReportSpecifierID)) {
                return false;
            }
        }
        {
            DurationPropType lhsGranularity;
            lhsGranularity = this.getGranularity();
            DurationPropType rhsGranularity;
            rhsGranularity = that.getGranularity();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "granularity", lhsGranularity), LocatorUtils.property(thatLocator, "granularity", rhsGranularity), lhsGranularity, rhsGranularity)) {
                return false;
            }
        }
        {
            DurationPropType lhsReportBackDuration;
            lhsReportBackDuration = this.getReportBackDuration();
            DurationPropType rhsReportBackDuration;
            rhsReportBackDuration = that.getReportBackDuration();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reportBackDuration", lhsReportBackDuration), LocatorUtils.property(thatLocator, "reportBackDuration", rhsReportBackDuration), lhsReportBackDuration, rhsReportBackDuration)) {
                return false;
            }
        }
        {
            Interval lhsReportInterval;
            lhsReportInterval = this.getReportInterval();
            Interval rhsReportInterval;
            rhsReportInterval = that.getReportInterval();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reportInterval", lhsReportInterval), LocatorUtils.property(thatLocator, "reportInterval", rhsReportInterval), lhsReportInterval, rhsReportInterval)) {
                return false;
            }
        }
        {
            List<SpecifierPayload> lhsSpecifierPayloads;
            lhsSpecifierPayloads = (((this.specifierPayloads!= null)&&(!this.specifierPayloads.isEmpty()))?this.getSpecifierPayloads():null);
            List<SpecifierPayload> rhsSpecifierPayloads;
            rhsSpecifierPayloads = (((that.specifierPayloads!= null)&&(!that.specifierPayloads.isEmpty()))?that.getSpecifierPayloads():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "specifierPayloads", lhsSpecifierPayloads), LocatorUtils.property(thatLocator, "specifierPayloads", rhsSpecifierPayloads), lhsSpecifierPayloads, rhsSpecifierPayloads)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theReportSpecifierID;
            theReportSpecifierID = this.getReportSpecifierID();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reportSpecifierID", theReportSpecifierID), currentHashCode, theReportSpecifierID);
        }
        {
            DurationPropType theGranularity;
            theGranularity = this.getGranularity();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "granularity", theGranularity), currentHashCode, theGranularity);
        }
        {
            DurationPropType theReportBackDuration;
            theReportBackDuration = this.getReportBackDuration();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reportBackDuration", theReportBackDuration), currentHashCode, theReportBackDuration);
        }
        {
            Interval theReportInterval;
            theReportInterval = this.getReportInterval();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reportInterval", theReportInterval), currentHashCode, theReportInterval);
        }
        {
            List<SpecifierPayload> theSpecifierPayloads;
            theSpecifierPayloads = (((this.specifierPayloads!= null)&&(!this.specifierPayloads.isEmpty()))?this.getSpecifierPayloads():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "specifierPayloads", theSpecifierPayloads), currentHashCode, theSpecifierPayloads);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

    public ReportSpecifier withReportSpecifierID(String value) {
        setReportSpecifierID(value);
        return this;
    }

    public ReportSpecifier withGranularity(DurationPropType value) {
        setGranularity(value);
        return this;
    }

    public ReportSpecifier withReportBackDuration(DurationPropType value) {
        setReportBackDuration(value);
        return this;
    }

    public ReportSpecifier withReportInterval(Interval value) {
        setReportInterval(value);
        return this;
    }

    public ReportSpecifier withSpecifierPayloads(SpecifierPayload... values) {
        if (values!= null) {
            for (SpecifierPayload value: values) {
                getSpecifierPayloads().add(value);
            }
        }
        return this;
    }

    public ReportSpecifier withSpecifierPayloads(Collection<SpecifierPayload> values) {
        if (values!= null) {
            getSpecifierPayloads().addAll(values);
        }
        return this;
    }

}
